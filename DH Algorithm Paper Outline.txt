DH Algorithm Paper Outline 

First paragraph rough draft 
    "
        What's the DH Algorithm?
    The Diffie Hellman Algorithm is a key exchange proctocol(more on that later) that 
    uses symmetrical encryption to make a shared and encrypted key. This is intergral 
    to two or more parties to comunicate over public channels without threat of attack 
    because of the DLP(more on that later too). The amazing part of it all is its crazy 
    simplicity. No matter what in encryption method you use, you need to have a shared
    encrypted key to begin. RSA, Triple DES, AES, it doesn't matter. You need(at less 
    for the more secure methods) a symmetrical encrypted key. That's what I like about
    DH. That's why I'm writing this.
        "
Second paragraph rough draft 
    "    
        TLDR How It Works?
    like I had said, DH is relatively simple. Key Word: relatively. You see, there is 
    ,like many things in life, a "bit" math. But before all that, we need some backgroud.
    The DH Algorithm was made by Whitfield Diffie and Martin Hellman, then published in 
    1969 in "New Directions In Cryptography". A Key Exchange Proctocol (told you we would 
    come back to this) is a method of encrypting a key that can only computed by how many 
    parties are paricipating. An ouside observer could know all of the transactions 
    happening but if one specific piece of infomation (which will be elaborated on further) 
    or more isn't known, they are (for a lack of better words) eternally screwed. Speaking of 
    eternity, that brings us to the DLP and the math of DH. 
        "
    Third paragraph rough draft 
    "    
        Background On DH
    So onto to the math! For DH, there is a little known branch of arithmetic known as modular 
    arithmetic. Modular Arithmetic is a system of integers where numbers restart after reaching 
    a certain value called a modulus. It was formulated by Carl Friedrich Gauss in "Disquisitiones 
    Arithmeticae." Basically, you have a set value N and every X reach N, it resets. Here's an example
    I'll explain it. It's simply the remainder, 22/5 = 4 R 2. N is 5 and X is 22. But that isn't all.
    It's not secure yet. Because of the modulus N resetting the all the integers less than N, it makes 
    it very hard to compute a average problem (which usually comes out to 1,000 - 2,000 numbers) but 
    it becomes virtually impossible when one or more key pieces of infomation is missing, which is how 
    this next part works.  
        "
    Fourth paragraph rough draft 
    "    
        How DH Actually Works
        DH is secure because of the personal key. After choosing the modulus N and one of it's generator G, 
    both parties (a & b) must pick an element that is coprime to N (their personal key) and make sure that they 
    keep it to themselves. 
        "
